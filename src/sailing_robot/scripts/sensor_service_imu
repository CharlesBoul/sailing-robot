#!/usr/bin/env python

from __future__ import division

import rospy
import tf

from std_msgs.msg import Float32
from sensor_msgs.msg import Imu

class heading_processing(object):
    def __init__(self):

        self.pub = rospy.Publisher('heading', Float32, queue_size=10)
        rospy.Subscriber('imu/data', Imu, heading_publisher)

    def heading_publisher(self, msg):
        imu = msg.data
        self.heading = tf.transformations.euler_from_quaternion(
                        (imu.orientation.x, imu.orientation.y,
                         imu.orientation.z, imu.orientation.w))[2]
    def run(self):
        r = rospy.Rate(20)
        while not rospy.is_shutdown():
            self.pub.publish(self.heading)
            r.sleep()

if __name__ == '__main__':
    process = heading_processing()
    try:
        process.run()
    except rospy.ROSInterruptException:
        pass
